plugins {
    id 'java'
}

group 'com.logicmaster63'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}


dependencies {
    compile group: 'joda-time', name: 'joda-time', version: '2.10.2'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    //compile group: 'com.github.fracpete', name: 'rsync4j', version: '3.1.2-0'
    compile group: 'uk.co.caprica', name: 'vlcj', version: '3.8.0'
    //compile group: 'com.github.twitch4j', name: 'twitch4j', version: '1.0.0-alpha.13'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.8'
    compile group: 'net.java.dev.jna', name: 'jna', version: '4.5.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    configurations {
        jar.archiveName = 'escreen.jar'
    }
    manifest {
        def versionPropsFile = file('version.properties')
        def code
        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            code = versionProps['VERSION_CODE'].toInteger() + 1
            versionProps['VERSION_CODE']=code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }
        else {
            throw new GradleException("Could not read version.properties!")
        }
        attributes "Main-Class": "com.uplinksystems.escreens.Display", "Specification-Version": code.toString()
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}